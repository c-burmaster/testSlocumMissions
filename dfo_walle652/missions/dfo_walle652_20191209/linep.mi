# linep.mi (Line P) based on based on esm.mi --> based on stock.mi
#
#  Retrieves waypoints from mafiles/goto_l10.ma 
#  Retrieves yo envelope  from mafiles/yo10.ma
#     For Autoballast/speed control, use yo14.ma	
#  Retrieves climb to surface controls from mafiles/surfac01 through 06.ma 
#  Surfaces:
#     if haven't had comms as controlled by surfac01.ma
#     mission done (finished all the waypoints) surfac02.ma
#     Bad altimeter or half yo's finish surfac03.ma
#     Every waypoint surfac04.ma
#     If requested by science surfac05.ma
#     Every x minutes surfac06.ma
# All science sensors sample on only downcast from sample10.ma
#
# 10-July-2010 ballsup@webbresearch.com Initial (based on glmpc.mi)
# 30-Nov-2010  ballsup@webbresearch.com	changed abort for cop tickle 13.5 hours and disabled percentage method
# 12-July-2019 Cailin changed b_arg: overtime(s) 12960000 for 5 months 
# 12-July-2019 Cailin changed b_arg: undervolts(volts)9.0 # for Lithium primary batteries 
# 15-July-2019 Cailin changed b_arg: args_from_file(enum) 14   # read from mafiles/yo14.ma
# 17-July-2019 Cailin changed b_arg: max_wpt_distance(m) 50000  #50 km from waypoint                                #            
# 27-July-2019 james.pegg@dfo-mpo.gc.ca disabled all scienc_all_on and 
#	added sample11.mi to sample16.mi to control science sensors seperately on down and upcast
#    changed max_wpt_distance to 500km
################################################################################
sensor: c_science_all_on_enabled(bool)   0  # in, non-zero enables c_science_all_on
					    # disable this sensor to allow for individually 
					    # sampled science sensors ie sample11.ma and greater

sensor: u_use_ctd_depth_for_flying(bool) 0  # true=> use ctd measurement for m_depth
                                            # implemented as emergency workaround for
                                            # broken ocean pressure

sensor: u_use_current_correction(nodim)  1  #  0 calculate, but do not use m_water_vx/y
                                            #  1 use m_water_vx/y to navigate AND steer

sensor: u_dbd_sensor_list_xmit_control(enum)	1	# 0  = always transmit header
							# 1  = transmit header on initial mission segment only
							# 2  = transmit header if THIS glider hasn't sent it before
							# 3  = never transmit header

sensor: u_sci_dbd_sensor_list_xmit_control(enum) 1	# 0  = always transmit header
							# 1  = transmit header on initial mission segment only
							# 2  = transmit header if THIS glider hasn't sent it before
							# 3  = never transmit header

sensor: u_alt_min_depth(m) 100.0     # set depth for altimeter to come on, strong surface layer



################################################################################

behavior: abend
    b_arg: overdepth_sample_time(s)       20.0 # how often to check
                                               # MS_ABORT_OVERTIME
    b_arg: overtime(s)                    12960000 # < 0 disables
                                               # MS_ABORT_WPT_TOOFAR
    b_arg: max_wpt_distance(m)            500000   # Maximum allowable distance to a waypoint           
    b_arg: samedepth_for_sample_time(s)   30.0 # how often to check
    b_arg: undervolts(volts)              9.0 # < 0 disables Decrease to 9
                                               # for Lithium primary batteries  

    b_arg: no_cop_tickle_for(sec)      48600.0 # secs, abort mission if watchdog
                                               # not tickled this often, <0 disables
    b_arg: no_cop_tickle_percent(%)         -1 # 0-100, <0 disables

################################################################################

# Come up if haven't had comms for a while
behavior: surface
    b_arg: args_from_file(enum) 01 # read from mafiles/surfac01.ma

################################################################################

    # Come up when mission done
    # This is determined by no one steering in x-y plane (no waypoints)
behavior: surface
    b_arg: args_from_file(enum) 02 # read from mafiles/surfac02.ma
  
################################################################################

    # Come up briefly if "yo" finishes 
    # This happens if a bad altimeter hit causes a dive and climb to
    # complete in same cycle.  We surface and hopefully yo restarts
    # or change keystroke_wait_time if surfacing for num_half_cycles_to_do 
behavior: surface
    b_arg: args_from_file(enum) 03 # read from mafiles/surfac03.ma

################################################################################

    # Come up every way point
#behavior: surface
   # b_arg: args_from_file(enum) 04 # read from mafiles/surfac04.ma

################################################################################

    # Come up when requested by science
#behavior: surface
   # b_arg: args_from_file(enum) 05 # read from mafiles/surfac05.ma


################################################################################

    # Come up every x minutes
#behavior: surface
  #  b_arg: args_from_file(enum) 06 # read from mafiles/surfac06.ma


################################################################################

behavior: goto_list
    b_arg: args_from_file(enum) 10   # read from mafiles/goto_l10.ma
    b_arg: start_when(enum)      0   # 0-immediately, 1-stack idle 2-heading idle

################################################################################

behavior: yo
    b_arg: args_from_file(enum) 14   # read from mafiles/yo14.ma
    b_arg: start_when(enum)      2   #  0-immediately, 1-stack idle 2-depth idle
    b_arg: end_action(enum)      2   # 0-quit, 2 resume

################################################################################
###COMMENTED OUT###
#   # Sample all science sensors on upcast and downcast
#behavior: sample
#	b_arg: args_from_file(enum)            10  # >= 0 enables reading from mafiles/sample10.ma
################################################################################

# sensor c_science_all_on_enabled must be set to 0 to uncouple science sensor union

#### Sample ctd on downcast
behavior: sample
	b_arg: args_from_file(enum)           11  # sample11.ma

#### Sample ctd on Nth upcast
behavior: sample
	b_arg: args_from_file(enum)		 12 # sample12.ma

#### Sample Anderaa optode on downcast
behavior: sample
	b_arg: args_from_file(enum)	      13  # sample13.ma
 
#### Sample Anderaa optode on Nth upcast
behavior: sample
	b_arg: args_from_file(enum)		14 # sample14.ma

#### Sample Ecopuck on downcast
behavior: sample
	b_arg: args_from_file(enum)		15 # sample15.ma

#### Sample Ecopuck on Nth upcast
behavior: sample
	b_arg: args_from_file(enum)		16 # sample16.ma

################################################################################

   # Sample ctd only on downcast
   # sensor c_science_all_on_enabled must be set to 0 to uncouple science sensor union
#behavior: sample
#b_arg: args_from_file(enum)            11  # >= 0 enables reading from mafiles/sample11.ma

################################################################################

behavior: prepare_to_dive
    b_arg: start_when(enum) 0     # 0-immediately, 1-stack idle 2-depth idle
    b_arg: wait_time(s)   720     # 12 minutes, how long to wait for gps

################################################################################

behavior: sensors_in       # Turn most input sensors off
